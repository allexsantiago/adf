{
	"name": "bronzeIngestIncrement",
	"properties": {
		"activities": [
			{
				"name": "lk_table_increment",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "databr",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select a.idTable\n\t  ,a.tableName\n\t  ,a.tableSchema\n\t  ,b.idIngestType\n\t  ,a.columnMostRecentDateTime\n\t  ,max(c.mostRecentDateTime) as mostRecentDateTime\nfrom controller.ingestTable a (nolock)\njoin controller.ingestType  b (nolock) on a.idIngestType = b.idIngestType\nleft join controller.waterMark c (nolock) on a.idTable = c.idTable\nwhere 1 = 1\nand b.idIngestType = 2\ngroup by a.idTable\n\t    ,a.tableName\n\t    ,a.tableSchema\n\t    ,b.idIngestType\n\t\t,a.columnMostRecentDateTime",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqldb",
						"type": "DatasetReference",
						"parameters": {
							"schema": "controller",
							"tbName": "tabelas"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lk_table_increment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lk_table_increment').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "bronzeIngestIncrement",
							"description": "IngestÃ£o incremental na camada bronze",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().tableName} where @{item().columnMostRecentDateTime} > '@{if(empty(item().mostRecentDateTime),'1900-01-01', item().mostRecentDateTime)}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_sqldb",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().tableSchema",
											"type": "Expression"
										},
										"tbName": {
											"value": "@item().tableName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"path": {
											"value": "increment/@{formatDateTime(variables('databr'),'yyyy-MM-dd')}/@{item().tableSchema}/@{item().tableName}/",
											"type": "Expression"
										},
										"fileName": {
											"value": "@{item().tableName}_@{variables('databr')}.parquet",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "pr_update_waterMark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "lk_mostRecentDateTime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[controller].[pr_update_waterMark]",
								"storedProcedureParameters": {
									"adfPipeline": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"idadlsLayer": {
										"value": "1",
										"type": "Int32"
									},
									"ingestedRows": {
										"value": {
											"value": "@activity('bronzeIngestIncrement').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ingestEndDateTime": {
										"value": {
											"value": "@formatDateTime(addSeconds(convertFromUtc(activity('bronzeIngestIncrement').output.executionDetails[0].start, 'E. South America Standard Time'),activity('bronzeIngestIncrement').output.copyDuration), 'yyyy-MM-dd hh:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"ingestStartDateTime": {
										"value": {
											"value": "@formatDateTime(convertFromUtc(activity('bronzeIngestIncrement').output.executionDetails[0].start, 'E. South America Standard Time'),'yyyy-MM-dd hh:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"idIngestType": {
										"value": {
											"value": "@item().idIngestType",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"mostRecentDateTime": {
										"value": {
											"value": "@activity('lk_mostRecentDateTime').output.firstRow.MostRecentDateTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"idTable": {
										"value": {
											"value": "@item().idTable",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "SqlServerLocalAlex",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "lk_mostRecentDateTime",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "bronzeIngestIncrement",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select max(@{item().columnMostRecentDateTime}) as MostRecentDateTime from @{item().tableName}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_sqldb",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().tableSchema",
											"type": "Expression"
										},
										"tbName": {
											"value": "@item().tableName",
											"type": "Expression"
										}
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "databr",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "databr",
					"value": {
						"value": "@formatDateTime(convertFromUtc(utcNow(), 'E. South America Standard Time'),'yyyy-MM-ddTHH:mm:ss')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"databr": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Bronze Ingest"
		},
		"annotations": []
	}
}